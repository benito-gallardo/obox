@each $color_name, $color in $colors {
  @each $color_type, $color_value in $color {
    @if $color_type == "base" {
      .#{$color_name} {
        background-color: $color_value !important;
      }
      .text-#{$color_name} {
        color: $color_value !important;
      }
      .border-#{$color_name} {
        border-color: $color_value !important;
      }
      .btn.#{$color_name}:hover, 
      .btn-square.#{$color_name}:hover {
         // background-color: darken( $color_value, 7% ) !important;
         background-color:color($color_name, 'lighten-1')!important;
      }
      .btn.#{$color_name}:active,
      .btn-square.#{$color_name}:active {
         background-color:color($color_name, 'darken-1')!important;
      }
      .btn.text-#{$color_name}:hover,
      .btn-square.text-#{$color_name}:hover {
        // color: darken( $color_value, 15% ) !important;
        background-color:color($color_name, 'lighten-1')!important;
      }
      .btn.text-#{$color_name}:active,
      .btn-square.text-#{$color_name}:active {
        background-color:color($color_name, 'darken-1')!important;
      }
      .btn.border-#{$color_name}:hover,
      .btn-square.border-#{$color_name}:hover {
        border-color: darken( $color_value, 15% ) !important;
      }
      a.text-#{$color_name}:hover {
        color: lighten( $color_value, 10% ) !important;
      }
    }
    @else {
      .#{$color_name}.#{$color_type} {
        background-color: $color_value !important;
      }
      .btn.#{$color_name}.#{$color_type}:hover, 
      .btn-square.#{$color_name}.#{$color_type}:hover {
         background-color:lighten( $color_value, 7% )!important;
      }
      .btn.#{$color_name}.#{$color_type}:active,
      .btn-square.#{$color_name}.#{$color_type}:active {
         background-color: darken( $color_value, 7% ) !important;
      }
      .text-#{$color_name}.text-#{$color_type} {
        color: $color_value !important;
      }
      .border-#{$color_name}.border-#{$color_type} {
        border-color: $color_value !important;
      }
    }
  }
}

// Shade classes
@each $color, $color_value in $shades {
  .#{$color} {
    background-color: $color_value !important;
  }
  .text-#{$color} {
    color: $color_value !important;
  }
  .border-#{$color} {
    border-color: $color_value !important;
  }
  .btn.border-#{$color},
  .btn-square.border-#{$color} {
    border-color: $color_value!important;
  }
  .btn.border-#{$color}:hover,
  .btn-square.border-#{$color}:hover {
    border-color: rgba($color_value, 0.3)!important;
  }
  .btn.text-#{$color},
  .btn-square.text-#{$color} {
    color: $color_value!important;
  }
  .btn.text-#{$color}:hover,
  .btn-square.text-#{$color}:hover {
    color: $color_value!important;
    opacity: 1;
  }
  .btn.#{$color},
  .btn-square.#{$color} {
    background-color: $color_value!important;
  }
  .btn.#{$color}:hover,
  .btn-square.#{$color}:hover {
    background-color: rgba($color_value, 0.7)!important;
  }
}

// Transparent Classes
@each $color, $color_value in $transparent-shades {
  .#{$color} {
    background-color: $color_value !important;
  }
  .text-#{$color} {
    color: $color_value !important;
  }
  .border-#{$color} {
    border-color: $color_value !important;
  }
}

//MOVED HIGHER UP IN CODE
// // usage: color("name_of_color", "type_of_color")
// // to avoid to repeating map-get($colors, ...)
// @function color($color, $type) {
//   @if map-has-key($colors, $color) {
//     $curr_color: map-get($colors, $color);
//     @if map-has-key($curr_color, $type) {
//       @return map-get($curr_color, $type);
//     }
//   }
//   @warn "Unknown '#{name}' in $colors.";
//   @return null;
// }


// Borders
.border,
[class^="border-"],
[class*=' border-'] {
  border-style: solid!important;
  border-width: 1px!important;
}
.border-none {border-width: 0px 0px 0px 0px!important;}
.border-top {border-width: 1px 0px 0px 0px!important;}
.border-right {border-width: 0px 1px 0px 0px!important;}
.border-bottom {border-width: 0px 0px 1px 0px!important;}
.border-left {border-width: 0px 0px 0px 1px!important;}
